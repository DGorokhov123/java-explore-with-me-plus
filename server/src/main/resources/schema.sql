
CREATE TABLE IF NOT EXISTS users (
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    VARCHAR(254) NOT NULL UNIQUE,
    name     VARCHAR(250) NOT NULL
);

CREATE TABLE IF NOT EXISTS categories (
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cat_name    VARCHAR(50) NOT NULL UNIQUE
);


CREATE TABLE IF NOT EXISTS events (
    id                  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    initiator           BIGINT NOT NULL REFERENCES users(id)        ON DELETE CASCADE,
    categories_id       BIGINT NOT NULL REFERENCES categories(id)   ON DELETE RESTRICT,
    title               VARCHAR(120) NOT NULL,
    annotation          VARCHAR(2000) NOT NULL,
    description         VARCHAR(7000) NOT NULL,
    state               VARCHAR(20) NOT NULL,
    lat                 FLOAT,
    lon                 FLOAT,
    participant_limit   BIGINT NOT NULL,
    request_moderation  BOOLEAN NOT NULL,
    paid                BOOLEAN NOT NULL,
    event_date          TIMESTAMP NOT NULL,
    published_on        TIMESTAMP,
    created_on          TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS views (
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    event_id        BIGINT NOT NULL REFERENCES events(id)   ON DELETE CASCADE   ON UPDATE RESTRICT,
    ip              VARCHAR(15) NOT NULL
);

CREATE TABLE IF NOT EXISTS requests (
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    requester_id    BIGINT NOT NULL REFERENCES users(id)    ON DELETE CASCADE   ON UPDATE RESTRICT,
    event_id        BIGINT NOT NULL REFERENCES events(id)   ON DELETE CASCADE   ON UPDATE RESTRICT,
    status          VARCHAR(15) NOT NULL,
    created_at      TIMESTAMP NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations (
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned  BOOLEAN       NOT NULL,
    title   VARCHAR(50)  NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations_events (
    compilations_id BIGINT  NOT NULL,
    events_id       BIGINT  NOT NULL,

    CONSTRAINT pk_compilations_events PRIMARY KEY (compilations_id, events_id),
    CONSTRAINT fk_compilations FOREIGN KEY (compilations_id) REFERENCES compilations (id) ON DELETE CASCADE,
    CONSTRAINT fk_events FOREIGN KEY (events_id) REFERENCES events (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY  NOT NULL,
    textual_content VARCHAR(1000) NOT NULL,
    author_id       BIGINT        NOT NULL,
    event_id        BIGINT        NOT NULL,
    create_time     TIMESTAMP     NOT NULL,
    patch_time      TIMESTAMP
    approved        BOOLEAN DEFAULT TRUE NOT NULL,

    CONSTRAINT pk_comment PRIMARY KEY (id),
    CONSTRAINT fk_user_comment FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_event_comment FOREIGN KEY (event_id) REFERENCES event (id) ON DELETE CASCADE
);

CREATE INDEX idx_textual_content ON comments (textual_content);
CREATE INDEX idx_event_id_comment_id ON comments (event_id, id);
